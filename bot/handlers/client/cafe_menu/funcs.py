from typing import TYPE_CHECKING

from cachetools.func import ttl_cache

from shared.utils.consts import BEAUTIFY_MEALS
from shared.utils.datehelp import format_date, weekday_by_date
from shared.utils.phrases import NO_DATA
from shared.utils.translate import CAFE_MENU_TRANSLATE

if TYPE_CHECKING:
    import datetime as dt

    from shared.database.repository import MenuRepository


# @ttl_cache(ttl=60 * 60)  # –ß–∞—Å
async def get_format_menu_by_date(
    repo: "MenuRepository",
    date: "dt.date",
) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ–Ω—é –ø–æ –¥–∞—Ç–µ.

    –ù/–¥ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏—ë–º–∞ –ø–∏—â–∏, –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç.

    :param repo: –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π —Å—Ç–æ–ª–æ–≤–æ–π.
    :param date: –ù—É–∂–Ω–∞—è –¥–∞—Ç–∞.
    :return: –ì–æ—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ç–µ–ª–µ–≥–∏.
    """
    menu = await repo.get(date)

    meals = tuple(
        getattr(menu, meal, NO_DATA) or NO_DATA for meal in CAFE_MENU_TRANSLATE
    )

    return (
        f"üç∫ <b>–ú–µ–Ω—é –Ω–∞ {format_date(date)} ({weekday_by_date(date)})</b>:\n\n"
        f"{_format_menu(meals).strip()}"
    )


@ttl_cache(ttl=60 * 60 * 24)  # –°—É—Ç–∫–∏
def _format_menu(meals: tuple[str, ...]) -> str:
    """
    –§–æ—Ä–º–∞—Ç –¥–Ω–µ–≤–Ω–æ–≥–æ –º–µ–Ω—é –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–µ–ª–µ–≥—É.

    :param meals: –°—Ç—Ä–æ–∫–∏ –ø–æ –ø–æ—Ä—è–¥–∫—É –ø—Ä–∏—ë–º–æ–≤ –ø–∏—â–∏.
    :return: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ —Å –ø—Ä–∏—ë–º–∞–º–∏ –ø–∏—â–∏.
    """
    return "\n\n".join(
        f"<b>{meal_type}:</b>\n{meal or NO_DATA}".strip()
        for meal_type, meal in zip(
            BEAUTIFY_MEALS,
            meals,
        )
    )
