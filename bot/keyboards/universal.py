import datetime as dt

from aiogram.utils.keyboard import (
    InlineKeyboardBuilder,
    InlineKeyboardButton,
    InlineKeyboardMarkup,
)

from bot.callbacks import InStateData, OpenMenu
from shared.utils.consts import TODAY
from shared.utils.datehelp import date_today, format_date
from shared.utils.enums import Actions, Menus, TextCommands
from shared.utils.phrases import NO, YES

MAIN_MENU = "üè†–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
CANCEL = f"{NO}–û—Ç–º–µ–Ω–∞"
CONFIRM = f"{YES}–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"


main_menu_button = InlineKeyboardButton(
    text=MAIN_MENU,
    callback_data=OpenMenu(menu=Menus.MAIN_MENU).pack(),
)
settings_button = InlineKeyboardButton(
    text=TextCommands.SETTINGS,
    callback_data=OpenMenu(menu=Menus.SETTINGS).pack(),
)
admin_panel_button = InlineKeyboardButton(
    text=TextCommands.ADMIN_PANEL,
    callback_data=OpenMenu(menu=Menus.ADMIN_PANEL).pack(),
)
confirm_state_button = InlineKeyboardButton(
    text=CONFIRM,
    callback_data=InStateData(action=Actions.CONFIRM).pack(),
)
cancel_state_button = InlineKeyboardButton(
    text=CANCEL,
    callback_data=InStateData(action=Actions.CANCEL).pack(),
)

cancel_state_keyboard = InlineKeyboardMarkup(inline_keyboard=[[cancel_state_button]])

confirm_cancel_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[[confirm_state_button, cancel_state_button]],
)


def _left_right_keyboard_navigation(
    bot_menu: str,
    today_smile: str,
    date: "dt.date" = None,
) -> "InlineKeyboardMarkup":
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –º–µ–Ω—é —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π –≤–ª–µ–≤–æ-–≤–ø—Ä–∞–≤–æ –ø–æ –¥–∞—Ç–∞–º.

    :param bot_menu: –ö–∞–∫–æ–µ –º–µ–Ω—é –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è.
    :param today_smile: –°–º–∞–π–ª–∏–∫ –Ω–∞ –∫–Ω–æ–ø–∫–µ "–°–µ–≥–æ–¥–Ω—è".
    :param date: –î–∞—Ç–∞, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π –æ—Ç–∫—Ä—ã—Ç–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏—è. None - —Å–µ–≥–æ–¥–Ω—è.
    :return: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º–µ–Ω—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –≤–ª–µ–≤–æ-–≤–ø—Ä–∞–≤–æ.
    """
    today = date_today()

    if date is None:
        date = today

    tomorrow = date + dt.timedelta(days=1)
    yesterday = date - dt.timedelta(days=1)
    tomorrow_str = format_date(tomorrow, with_year=False)
    yesterday_str = format_date(yesterday, with_year=False)
    tomorrow_data = format_date(tomorrow)
    yesterday_data = format_date(yesterday)

    keyboard = InlineKeyboardBuilder()

    if abs((today - yesterday).days) < 7:
        keyboard.button(
            text=f"‚¨ÖÔ∏è {yesterday_str}",
            callback_data=OpenMenu(menu=bot_menu, date=yesterday_data),
        )

    keyboard.button(
        text=f"{today_smile}–°–µ–≥–æ–¥–Ω—è",
        callback_data=OpenMenu(menu=bot_menu, date=TODAY),
    )

    if abs((today - tomorrow).days) < 7:
        keyboard.button(
            text=f"{tomorrow_str} ‚û°Ô∏è",
            callback_data=OpenMenu(menu=bot_menu, date=tomorrow_data),
        )

    keyboard.row(main_menu_button)

    return keyboard.as_markup()
