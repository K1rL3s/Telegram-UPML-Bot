"""file_ids_limits

Revision ID: 0004
Revises: 0003
Create Date: 2023-10-26 00:20:35.137457

"""
from collections.abc import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "0004"
down_revision: Union[str, None] = "0003"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "class_lessons", sa.Column("file_id", sa.String(length=128), nullable=True)
    )
    op.execute("UPDATE class_lessons SET file_id = image")
    op.alter_column("class_lessons", "file_id", nullable=False)
    op.drop_column("class_lessons", "image")

    op.add_column(
        "full_lessons", sa.Column("file_id", sa.String(length=128), nullable=True)
    )
    op.execute("UPDATE full_lessons SET file_id = image")
    op.alter_column("full_lessons", "file_id", nullable=False)
    op.drop_column("full_lessons", "image")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "full_lessons",
        sa.Column("image", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.execute("UPDATE full_lessons SET image = file_id")
    op.alter_column("full_lessons", "file_id", nullable=False)
    op.drop_column("full_lessons", "file_id")

    op.add_column(
        "class_lessons",
        sa.Column("image", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.execute("UPDATE class_lessons SET image = file_id")
    op.alter_column("class_lessons", "file_id", nullable=False)
    op.drop_column("class_lessons", "file_id")
    # ### end Alembic commands ###
