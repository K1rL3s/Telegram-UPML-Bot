version: "3.9"

services:

  database:
    image: postgres:15.3-alpine3.18
    container_name: upml-bot-database
    restart: unless-stopped
    volumes:
      - "/var/upml-bot/database:/var/lib/postgresql/data"
    ports:
      - "${POSTGRES_OUTSIDE_PORT}:5432"
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7.2.1
    container_name: upml-bot-redis
    restart: unless-stopped
    volumes:
      - "/var/upml-bot/redis:/data"
    ports:
      - "${REDIS_OUTSIDE_PORT}:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    command: "redis-server --save 60 1 --loglevel warning --requirepass ${REDIS_PASSWORD}"

  bot:
    image: upml-bot-image
    container_name: upml-bot
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./bot/Dockerfile
    volumes:
      - "/var/upml-bot/logs:/app/logs"
    env_file: .env
    environment:
      TESSERACT_PATH: "/usr/bin/tesseract"
      PYTHONUNBUFFERED: 1
      PYTHONDONTWRITEBYTECODE: 1
    links:
      - database
      - redis

  scheduler:
    image: upml-bot-scheduler-image
    container_name: upml-bot-scheduler
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./scheduler/Dockerfile
    volumes:
      - "/var/upml-bot/logs:/app/logs"
    env_file: .env
    environment:
      PYTHONUNBUFFERED: 1
      PYTHONDONTWRITEBYTECODE: 1
    links:
      - database
